# 프로덕션 환경 설정
spring.application.name=MGcinema
server.port=${SERVER_PORT:8080}
server.address=0.0.0.0

# JSP 설정
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# 정적 리소스 설정
spring.web.resources.add-mappings=true
spring.mvc.static-path-pattern=/**

# MyBatis 설정
mybatis.mapper-locations=classpath:mybatis/mapper/**/**.xml

# 데이터베이스 설정 (Render PostgreSQL용)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

# PostgreSQL 연결 풀 설정 (프로덕션 최적화)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# 파일 업로드 설정
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# 로깅 설정 (프로덕션용 - 디버깅을 위해 임시로 DEBUG로 변경)
logging.level.com.cinema=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# 개발 도구 비활성화
spring.devtools.livereload.enabled=false

# 보안 설정 (디버깅을 위해 임시로 변경)
server.error.include-stacktrace=always
server.error.include-message=always

# 세션 설정
server.servlet.session.timeout=30m
